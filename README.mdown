PinkelStar iPhone/iPhone4/iPad Framework v0.9.5
===========================================================

This is the master branch of the PinkelStar iOS server Framework. 

To use this framework you will need to register for a developer
account at [PinkelStar](http://www.pinkelstar.com). Once registered, you can download the framework by cloning this repository :

    git clone git@github.com:PinkelStar/pinkelstar-iOS.git
	
We advise to also get our demo app to see a working integration of PinkelStar in an iOS app. You can get a copy of the demo app by cloning this repository:

	git clone git:github.com:PinkelStar/pinkelstar-iOS-demo.git
	
ALWAYS REFER TO THIS README.MDOWN FILE FOR THE LATEST INTEGRATION INSTRUCTIONS. WE UPDATE THE FRAMEWORK REGULARLY SO INSTRUCTION VIDEOS AND OTHER SOURCES WILL MOST LIKELY BE OUTDATED

PinkelStar uses the latest iPhone SDK (iOS4.2) and Xcode development environment (Xcode 3.2.5). Please upgrade your environment if needed. PinkelStar is fully compatible with iPhone, iPhone4 and iPad and provides native interfaces for each of these platforms.

Please make sure you are using the latest version of the code base and check GitHub regularly for updates. If we are working on new stuff we'll commit it into different branches. We will merge these branches with master when ready.

Instructions for using the PinkelStar iOS library in your own project
---------------------------------------------------------------------
Clone the repository using :

	git clone git@github.com:PinkelStar/pinkelstar-iOS.git

Contents
--------
- A PinkelStar.framework
- A PinkelStar folder
- A CHANGELOG.mdown and this README.mdown file

Requirements
------------
* Xcode (V2.x)
* The latest iOS SDK (v4.2)
* SystemConfiguration.framework, Foundation.framework, QuartzCore.framework, CoreGraphics.framework, UIKit.framework, MessageUI.framework
* PinkelStar.framework, and the PinkelStar folder containing code and resources
* Please set your Base SDK in your XCode project settings to the highest iOS SDK (currently 4.2), and set your deployment target to the minimum SDK level that you need (e.g. 3.0, 3.1, 3.2 etc). Set your Targeted device family to iPhone, Ipad or iPhone/iPad, depending on your needs.

Steps for setting up your first PinkelStar enabled iOS app :
------------------------------------------------------------
- Add the PinkelStar Framework to your XCode project
	- Open your Xcode project and locate your target in the left window pane of Xcode. Press the right mouse button on the target, and choose "Get Info"
	- A window pops up. Choose the "General" tab in your info window
	- Towards the bottom of that window you will see an overview of the linked libraries for this target. Add a new linked library by pressing the bottom + sign
	- When the selection window appears, press the "choose other" button at the bottom left of the window
	- Locate your copy of the downloaded PinkelStar.framework and add it

- Add all source code and resources
	- In Finder, Locate the PinkelStar directory that was part of the git clone
	- Select the folder and drag it into your Xcode project.
	- Add #include <PinkelStar/PSCommon.h> in your projects' .pch file. It contains a DebugLog macro that we use to print debugging info to the console. You can enable this macro yourself by adding a -DPS_DEBUG_LOG flag to your linker

- Enter your application key and secret
	- You have to register your iPhone app at your developers dashboard panel on www.pinkelstar.com/account/applications
	- If you have registered your app successfully you should now have an Application Key and Secret (press "edit" on www.pinkelstar.com/account/applications at the right side of your app to view the keys).
	- Locate the pinkelstar.plist file in your Xcode project. It should be in the PinkelStar/Resources group at the left side of your Xcode window.
	- Double click to open pinkelstar.plist within Xcode and enter your Application Key and Secret there
	- Save the pinkelstar.plist file
	- NOTE: THE SOFTWARE WILL NOT RUN IF YOU DO NOT ENTER YOUR OWN APPLICATION KEY AND SECRET

- You are now all set to add a PinkelStar share or like button anywhere in your project.
	- a. add the PSShareButtonDelegate and PSMainViewControllerDelegate protocol to the view controller in your project that will manage the PinkelStar button.
	- b. `import <PinkelStar/PSPinkelStar.h>` where needed
	- c. Call [PSPinkelStarServer sharedInstance] at application launch. This will ensure that the PinkelStar sharing UI is up to date when the user invokes it
	- d. Create a PSShareButton anywhere you want. It can be standard or your own custom button (check out the PSShareButton header file for details)
	- e. Implement the psShareButtonPressed delegate callback and there, create a PSMainViewController object. Add it to your view.
	- f. Implement the psFinished Delegate callback. This will be called when the PinkelStar process is finished or cancelled.

- The demo app mentioned earlier clearly demonstrates the integration process above

- Please note that you can customize nearly everything with PinkelStar. You do not need to use the default provided UI elements or buttons. You can set the type of message that the user can share, you can add a URL to content that the user wants to share etc. etc. See the header files for all options.

Compile and run!

Please post feature requests and bug reports to the GitHub issues tab.

If you see a possible improvement or feature which can be added, please fork this project, make the required changes, and
send us a pull request so we can merge your enhancements in to the master UI project.

Please post your questions to the [support forum](http://support.pinkelstar.com) and we will answer ASAP.

Happy Coding,

The PinkelStar Team
